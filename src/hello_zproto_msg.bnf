The following ABNF grammar defines the hello_zproto example protocol:

    hello_zproto_msg  = *(  LOG |  STRUCTURES |  BINARY )

    ; Log an event.
    log             = signature %d1 sequence level event node peer time data
    signature       = %xAA %xA0             ; two octets
    sequence        = number-2              ; 
    level           = number-1              ; Log severity level
    event           = number-1              ; Type of event
    node            = number-2              ; Sending node
    peer            = number-2              ; Refers to this peer
    time            = number-8              ; Log date/time
    data            = string                ; Actual log message

    ; This message contains a list and a hash.
    structures      = signature %d2 sequence aliases headers
    sequence        = number-2              ; 
    aliases         = strings               ; List of strings
    headers         = dictionary            ; Other random properties

    ; Deliver a multi-part message.
    binary          = signature %d3 sequence flags address content
    sequence        = number-2              ; 
    flags           = 4OCTET                ; A set of flags
    address         = frame                 ; Return address as frame
    content         = msg                   ; Message to be delivered

    ; A list of string values
    strings         = strings-count *strings-value
    strings-count   = number-4
    strings-value   = longstr

    ; A list of name/value pairs
    dictionary      = dict-count *( dict-name dict-value )
    dict-count      = number-4
    dict-value      = longstr
    dict-name       = string

    ; A frame is zero or more octets encoded as a ZeroMQ frame
    frame           = *OCTET

    ; A msg is zero or more distinct frames
    msg             = *frame

    ; Strings are always length + text contents
    string          = number-1 *VCHAR
    longstr         = number-4 *VCHAR

    ; Numbers are unsigned integers in network byte order
    number-1        = 1OCTET
    number-2        = 2OCTET
    number-4        = 4OCTET
    number-8        = 8OCTET
